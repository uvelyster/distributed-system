docker run --ip 172.30.0.101 --network demo-net \
 --name mysql1 -d \
 -e MYSQL_ROOT_PASSWORD=root \
 mysql 

docker run --ip 172.30.0.102 --network demo-net \
 --name mysql2 -d \
 -e MYSQL_ROOT_PASSWORD=root \
 mysql

docker run --ip 172.30.0.103 --network demo-net \
 --name mysql3 -d \
 -e MYSQL_ROOT_PASSWORD=root \
 mysql

docker run --ip 172.30.0.104 --network demo-net \
 --name mysql4 -d \
 -e MYSQL_ROOT_PASSWORD=root \
 mysql

uuidgen 

vi my1.cnf
[mysqld]
pid-file        = /var/run/mysqld/mysqld.pid
socket          = /var/run/mysqld/mysqld.sock
datadir         = /var/lib/mysql
secure-file-priv= NULL

server_id=1
gtid_mode=ON
enforce_gtid_consistency=ON
binlog_checksum=NONE
transaction_write_set_extraction=XXHASH64
loose-group_replication_recovery_use_ssl=ON
loose-group_replication_group_name="62e748d8-f542-4e1a-ac26-a3f998877998"
loose-group_replication_start_on_boot=OFF
loose-group_replication_local_address="172.30.0.101:13306"
loose-group_replication_group_seeds="172.30.0.101:13306,172.30.0.102:13306,172.30.0.103:13306,172.30.0.104:13306"
loose-group_replication_bootstrap_group=OFF
:wq

vi my2.cnf
[mysqld]
pid-file        = /var/run/mysqld/mysqld.pid
socket          = /var/run/mysqld/mysqld.sock
datadir         = /var/lib/mysql
secure-file-priv= NULL

server_id=2
gtid_mode=ON
enforce_gtid_consistency=ON
binlog_checksum=NONE
loose-group_replication_recovery_get_public_key=on
loose-group_replication_recovery_use_ssl=ON
loose-group_replication_group_name="62e748d8-f542-4e1a-ac26-a3f998877998"
loose-group_replication_start_on_boot=OFF
loose-group_replication_local_address="172.30.0.102:3306"
loose-group_replication_group_seeds="172.30.0.101:13306,172.30.0.102:13306,172.30.0.103:13306,172.30.0.104:13306"
loose-group_replication_bootstrap_group=OFF

[동일한 내용으로 my3.cnf 편집 + my4.cnf 편집]

docker cp my1.cnf mysql1:/etc/mysql/my.cnf
docker cp my2.cnf mysql2:/etc/mysql/my.cnf
docker cp my3.cnf mysql3:/etc/mysql/my.cnf
docker cp my4.cnf mysql4:/etc/mysql/my.cnf

docker restart mysql1 mysql2 mysql3 mysql4

docker exec -it mysql1 bash
mysql -uroot -proot 
INSTALL PLUGIN group_replication SONAME 'group_replication.so';
SELECT * FROM INFORMATION_SCHEMA.PLUGINS WHERE PLUGIN_NAME = 'group_replication' \G
exit
exit


docker exec -it mysql2 bash
mysql -uroot -proot 
INSTALL PLUGIN group_replication SONAME 'group_replication.so';
SELECT * FROM INFORMATION_SCHEMA.PLUGINS WHERE PLUGIN_NAME = 'group_replication' \G
exit
exit

docker exec -it mysql3 bash
mysql -uroot -proot 
INSTALL PLUGIN group_replication SONAME 'group_replication.so';
SELECT * FROM INFORMATION_SCHEMA.PLUGINS WHERE PLUGIN_NAME = 'group_replication' \G
exit
exit

docker exec -it mysql4 bash
mysql -uroot -proot 
INSTALL PLUGIN group_replication SONAME 'group_replication.so';
SELECT * FROM INFORMATION_SCHEMA.PLUGINS WHERE PLUGIN_NAME = 'group_replication' \G
exit
exit


vi create_rpl_user.sql
SET SQL_LOG_BIN=0;
CREATE USER rpl_user@'%' IDENTIFIED  WITH mysql_native_password BY 'rpl_pass';
GRANT REPLICATION SLAVE ON *.* TO rpl_user@'%';
FLUSH PRIVILEGES;
SET SQL_LOG_BIN=1;
:wq

docker cp create_rpl_user.sql mysql1:/
docker cp create_rpl_user.sql mysql2:/
docker cp create_rpl_user.sql mysql3:/
docker cp create_rpl_user.sql mysql4:/

docker exec -it mysql1 bash
mysql -uroot -proot 
source create_rpl_user.sql
exit
exit

docker exec -it mysql2 bash
mysql -uroot -proot 
source create_rpl_user.sql
exit
exit

docker exec -it mysql3 bash
mysql -uroot -proot 
source create_rpl_user.sql
exit
exit

docker exec -it mysql4 bash
mysql -uroot -proot 
source create_rpl_user.sql
exit
exit

docker exec -it mysql1 bash
mysql -uroot -proot 
SET GLOBAL group_replication_bootstrap_group=ON;
RESET MASTER;
START GROUP_REPLICATION;
SET GLOBAL group_replication_bootstrap_group=OFF;
exit
exit



docker exec -it mysql2 bash
mysql -uroot -proot
CHANGE MASTER TO MASTER_USER='rpl_user', MASTER_PASSWORD='rpl_pass' FOR CHANNEL 'group_replication_recovery';
RESET MASTER;
START GROUP_REPLICATION;
exit
exit

docker exec -it mysql3 bash
mysql -uroot -proot
CHANGE MASTER TO MASTER_USER='rpl_user', MASTER_PASSWORD='rpl_pass' FOR CHANNEL 'group_replication_recovery';
RESET MASTER;
START GROUP_REPLICATION;
exit
exit

docker exec -it mysql4 bash
mysql -uroot -proot
CHANGE MASTER TO MASTER_USER='rpl_user', MASTER_PASSWORD='rpl_pass' FOR CHANNEL 'group_replication_recovery';
RESET MASTER;
START GROUP_REPLICATION;
exit
exit

docker exec -it mysql1 bash
mysql -uroot -proot

SELECT MEMBER_HOST, MEMBER_PORT, MEMBER_STATE, MEMBER_ROLE FROM
performance_schema.replication_group_members;

SELECT member_id, member_host, member_port \
FROM performance_schema.global_status \
JOIN performance_schema.replication_group_members \
ON VARIABLE_VALUE=member_id \
WHERE VARIABLE_NAME='group_replication_primary_member';



